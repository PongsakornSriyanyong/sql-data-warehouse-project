-- 1) Database exploration
-- Explore all object in the Database
select * from INFORMATION_SCHEMA.TABLES

-- Explore All Columns in the Database
select * from INFORMATION_SCHEMA.COLUMNS
where table_name = 'dim_customers'

--2) Dimension exploration
--Explore country of our customers 
select Distinct country from gold.dim_customers

--Explore All categories 'The major Divisions'
select Distinct category, subcategory, product_name from gold.dim_products
order by 1,2,3

--3) Date Exploration
--Find fisrt and last order date
select 
min(order_date) as first_order_date,
max(order_date) as last_order_date,
datediff(year,min(order_date),max(order_date)) as order_range 
from gold.fact_sales

--Find Yougest and oldest customer
select 
min(birthdate) as oldest_customer,
datediff(year, min(birthdate), getdate()) as oldest_age,
max(birthdate) as youngest_customer,
datediff(year, max(birthdate), getdate()) as youngest_age
from gold.dim_customers


--4) Measures Exploration
select * from gold.fact_sales
--Find the Total Sales
select sum(sales_amount) as total_sales from gold.fact_sales
--How many items are sold
select sum(quantity) as total_sales from gold.fact_sales
--Avg selling price
select avg(price) as selling_price from gold.fact_sales
--Find the total number of orders
select count(order_number) as total_orders from gold.fact_sales
select count(distinct order_number) as total_orders from gold.fact_sales
--Find the total number of products
select count(product_key) as total_products from gold.dim_products
select count(distinct product_key) as total_products from gold.dim_products
--Find the total numbers of customer
Select count(customer_key) as total_customers from gold.dim_customers
--Find the total number of customers that has placed an order
Select count(distinct customer_key) as total_customers from gold.fact_sales

--Generate a report thtat shows all key metric of the business
select 'Total Sales' as measure_name, sum(sales_amount) as measure_value from gold.fact_sales
union all
select 'Total Quantity' as measure_name, sum(quantity) as measure_value from gold.fact_sales
union all
select 'Average Price' as mesure_name, avg(price) as selling_price from gold.fact_sales
union all
select 'Total Nr.Orders', count(distinct order_number) from gold.fact_sales
union all
select 'Total Nr.Products', count(product_name) from gold.dim_products
union all
select 'Total Nr. Customers', count(customer_key) from gold.dim_customers

--5) Magnitude exploration
select * from gold.dim_products
--Find total customer by countries
select country, 
count(customer_key) as total_customers
from gold.dim_customers
group by country
order by total_customers
--Find total customers by gender
select 
gender,
count(customer_key) as total_customers
from gold.dim_customers
group by gender
order by total_customers
--Find total products by category
select 
category,
count(product_key) as total_product
from gold.dim_products
group by category
--What is the average costs in each category
select
category,
avg(cost) as avg_cost
from gold.dim_products
group by category
--What is the total revenue generated for each category
select 
p.category,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by category
order by total_revenue desc
--Find total revenue is generated by each customer
select
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key,c.first_name,c.last_name
--What is the distribrution of sold item across countries

select
c.country,
sum(f.quantity) as total_sold_items
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_key = f.customer_key
group by c.country
order by total_sold_items desc


-- 6) ranking
--Which 5 products generate the higrest revenue
select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc
--window function
select * from (
select
p.product_name,
sum(f.sales_amount) as total_revenue,
row_number() over (order by sum(f.sales_amount) desc) as rank_products
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name) t
where rank_products <= 5


-- Worst 5 product
select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue asc

select * from (
select
p.product_name,
sum(f.sales_amount) as total_revenue,
row_number() over (order by sum(f.sales_amount) asc) as rank_products
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name) t
where rank_products <= 5

-- find top 10 customer generated highest revenue
--1
select top 10
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key,c.first_name,c.last_name
order by total_revenue desc
--2 
select * from(
select 
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue,
row_number() over (order by sum(f.sales_amount) desc) as rank_customers
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key,c.first_name,c.last_name)t
where rank_customers <= 10

-- Few orders
select top 3
c.customer_key,
c.first_name,
c.last_name,
count(distinct order_number) as total_orders
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_id = f.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_orders asc
